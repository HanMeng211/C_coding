#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>
#include<string.h>
int main()
{
	char str[] = "abcd";
	char str1[] = "hah";
	printf("%s\n", strcpy(str,str1));
	return 0;
}
//模拟实现strlen
//size_t Strlen(const char* str)
//{
//	size_t len = 0;
//	while (*str != 0)
//	{
//		++len;
//		++str;
//	}
//	return len;
//}
//int main()
//{
//	char str[] = "abcd";
//	printf("%d\n", Strlen(str));
//	printf("%d\n", sizeof(str));
//	return 0;
//}
//struct Test
//{
//	int Num;
//	char *pcName;
//	short sDate;
//	char cha[2];
//	short sBa[4];
//}*p;
////假设p 的值为0x100000。 如下表表达式的值分别为多少？
//int main()
//{
//	printf("%p\n", p + 0x1);
//	printf("%p\n", (unsigned long)p + 0x1);
//	printf("%p\n", (unsigned int*)p + 0x1);
//	return 0;
//}
//int main()
//{
//	int a[5] = { 1, 2, 3, 4, 5 };
//	int *ptr = (int *)(&a + 1);
//	printf("%d,%d", *(a + 1), *(ptr - 1));
//	return 0;
//}
//#include<string.h>
//
//int Judge()
//{
//	int a = 1;
//	char b = a;
//	if (b == 1)
//	{
//		return 1;
//	}
//	else
//	{
//		return 0;
//	}
//
//}
//int main()
//{
//	int a = 1;
//	if (Judge)
//	{
//		printf("小端\n");
//	}
//	else
//	{
//		printf("大端\n");
//	}
//	return 0;
//}
//int main()
//{
//	int i = 0, a = 0, b = 2, c = 3, d = 4;
//	i = a++ || ++b || d++;
//	printf("i=%d\n a=%d\n b=%d\n c=%d\n d=%d\n", i, a, b, c, d);
//	return 0;
//}

//int main()
//{
//	int a = 22, b = 88;
//	printf("a = %d  b = %d\n", a, b);
//	a = a^b;
//	b = a^b;
//	a = a^b;
//	printf("a = %d  b = %d\n", a, b);
//	return 0;
//}
//void main()
//{
//	char a[] = "abc";//后面默认有'\n'
//	char a1[] = { 'a', 'b', 'c' };
//	char str[] = { "abc" };
//}
//void Reverse(char* str,int n)
//{
//	int left = 0, right = n - 1;
//	while (left < right)
//	{
//		char tem = str[left];
//		str[left] = str[right];
//		str[right] = tem;
//		++left;
//		--right;
//	}
//	for (int i = 0; i < n; ++i)
//	{
//		printf("%c", str[i]);
//	}
//	printf("\n");
//}
//
//void main()
//{
//	char str[] = "hello word";
//	for (int i = 0; i < strlen(str); ++i)
//	{
//		printf("%c", str[i]);
//	}
//	printf("\n");
//	Reverse(str, strlen(str));
//}
//int fib(int n)
//{
//	if (n < 2)
//	{
//		return n;
//	}
//	return fib(n - 1) + fib(n - 2);
//}
//int fib(int n)
//{
//	if (n < 2)
//	{
//		return n;
//	}
//	int a = 0, b = 1, c;
//	int i = 2;
//	while (i <= n)
//	{
//		c = a + b;
//		a = b;
//		b = c;
//		++i;
//	}
//	return c;
//}
//
//void main()
//{
//	int ret = fib(10);
//	printf("%d\n", ret);
//}
//#include <string.h>
//int main()
//{
//	char arr[20] = "hello";
//	int ret = strlen(strcat(arr, "bit"));//这里介绍一下strlen函数
//	printf("%d\n", ret);
//	return 0;
//}
//#include<stdio.h>
//void BinarySearch(int* arr, int x, int n)
//{
//	int left = 0, right = n -1;
//	while (left <= right)
//	{
//		int mid = (left + right) / 2;
//		if (x < arr[mid])
//		{
//			right = mid - 1;
//		}
//		else if (x > arr[mid])
//		{
//			left = mid + 1;
//		}
//		else
//		{
//			printf("找到%d了\n", x);
//			return;
//		}
//	}
//	printf("没找到%d\n", x);
//	return;
//}
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10,11,12,13 };
//	BinarySearch(arr, 6, sizeof(arr) / sizeof(arr[0]));
//	return 0;
//}
//int main()
//{
//	for (;;)
//	{
//		printf("hehe\n");
//	}
	/*int i = 0;
	int k = 0;
	int count = 0;
	for (i = 0, k = 0; k = 0; i++, k++)
	{
		k++;
		++count;
	}
	printf("%d\n", count);*/
//	return 0;
//}
//int main()
//{
//	int a;
//	begin :
//	printf("请输入一个数：");
//	scanf_s("%d", &a);
//	goto begin;
//}
//int main()
//{
//	int day;
//	scanf_s("%d", &day);
//	switch (day)
//	{
//	case 1:
//		printf("星期一\n");
//		break;
//	case 2:
//		printf("星期二\n");
//		break;
//	case 3:
//		printf("星期三\n");
//		break;
//	default:
//		printf("非法输入\n");
//		break;
//	}
//	return 0;
//}
//#define ADD(x, y) ((x)+(y))
//
//int main()
//{
//	int sum = ADD(2, 3);
//	printf("sum = %d\n", sum);
//	sum = 10 * ADD(2, 3);
//	printf("sum = %d\n", sum);
//	return 0;
//}
//代码1
//#include <stdio.h>
//int main()
//{
//	printf("%d\n", strlen("\279"));
//	printf("%d\n", strlen("\x37"));
//}
//int g_val = 2018;
////test.c
//#include<stdio.h>
////声明a是外部的
//extern int a;
//void fun()
//{
//	++a;
//	printf("%d\n", a);
//}
//int main()
//{
//	fun();
//	return 0;
//}
//代码2
//add.c
//static int g_val = 2018;
////test.c
//int main()
//{
//	printf("%d\n", g_val);
//	return 0;
//}
//void test()
//{
//	int i = 0;
//	i++;
//	printf("%d ", i);
//}
//int main()
//{
//	int i = 0;
//	for (i = 0; i<10; i++)
//	{
//		test();
//	}
//	return 0;
//}
//代码2
//#include <stdio.h>
//void test()
//{
//	//static修饰局部变量
//	static int i = 0;
//	i++;
//	printf("%d ", i);
//}
//int main()
//{
//	int i = 0;
//	for (i = 0; i<10; i++)
//	{
//		test();
//	}
//	return 0;
//}
