#include<stdio.h>
int main()
{
	int a[] = { 1, 2, 3, 4 };
	printf("%d\n", sizeof(a));//16
	printf("%d\n", sizeof(a + 0));//4首元素地址加减之后代表数组里元素的地址
	printf("%d\n", sizeof(*a));//4首元素的地址解引用代表首元素
	printf("%d\n", sizeof(a + 1));//4
	printf("%d\n", sizeof(a[1]));//4
	printf("%d\n", sizeof(&a));//4数组指针
	printf("%d\n", sizeof(*&a));//16数组指针解引用是一个数组
	printf("%d\n", sizeof(&a + 1));//4
	printf("%d\n", sizeof(&a[0]));//4
	printf("%d\n", sizeof(&a[0] + 1));//4
	return 0;
}




#include<stdio.h>
int main()
{
	char arr[] = { 'a', 'b', 'c', 'd', 'e', 'f' };
	printf("%d\n", sizeof(arr));//6
	printf("%d\n", sizeof(arr + 0));//4,首元素地址是一个char*
	printf("%d\n", sizeof(*arr));//1,首元素地址char*解引用char
	printf("%d\n", sizeof(arr[1]));//1
	printf("%d\n", sizeof(&arr));//4
	printf("%d\n", sizeof(&arr + 1));//4
	printf("%d\n", sizeof(&arr[0] + 1));//4首元素地址char*加1还是char*
	return 0;
}






#include<stdio.h>
int main()
{
	char p[] = "abcdef";
	printf("%d\n", sizeof(p));//7
	printf("%d\n", sizeof(p + 1));//4
	printf("%d\n", sizeof(*p));//1
	printf("%d\n", sizeof(p[0]));//1
	printf("%d\n", sizeof(&p));//4
	printf("%d\n", sizeof(&p + 1));//4
	printf("%d\n", sizeof(&p[0] + 1));//4
	return 0;
}





#include<stdio.h>
int main()
{
	char *p = "abcdef";
	printf("%d\n", sizeof(p));//4,是一个指针
	printf("%d\n", sizeof(p + 1));//4,char*
	printf("%d\n", sizeof(*p));//1,char
	printf("%d\n", sizeof(p[0]));//1
	printf("%d\n", sizeof(&p));//4,//char*取地址char**
	printf("%d\n", sizeof(&p + 1));//4
	printf("%d\n", sizeof(&p[0] + 1));//4,char取地址char*
	return 0;
}
